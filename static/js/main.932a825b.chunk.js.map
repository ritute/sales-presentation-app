{"version":3,"sources":["images/avatar.jpeg","images/empty-folder.png","serviceWorker.js","config/config.js","components/Status/ErrorBanner.js","components/Status/ErrorBoundary.js","components/Layout/HomeLayout.js","actions/dialog.js","services/api.js","actions/assetFilters.js","actions/presentations.js","components/Dialog/NewPresentationDialog.js","components/Dialog/EditPresentationTitleDialog.js","components/Dialog/DialogTitleWithClose.js","utils/AssetUtils.js","components/Asset/AssetPreview.js","components/Dialog/PreviewPresentationDialog.js","components/Dialog/PreviewAssetDialog.js","components/Dialog/DeletePresentationConfirmationDialog.js","components/Dialog/DialogRoot.js","actions/assets.js","components/Thumbnail/ResponsiveThumbnail.js","components/PresentationList/PresentationCard.js","components/PresentationList/PresentationCardWithActionOverlay.js","hoc/hoverable-hoc.js","components/Status/LoadingSpinner.js","components/Status/EmptyState.js","components/PresentationList/PresentationList.js","components/Presentation/AssetCategoryFilterList.js","selectors/assets.js","components/Asset/DraggableAssetMenu.js","components/Asset/DraggableAsset.js","components/Presentation/AssetLibraryDroppable.js","components/Presentation/SelectedAssetsDroppable.js","components/Presentation/PresentationAssets.js","components/Presentation/Presentation.js","components/AssetLibrary/AssetLibrary.js","config/muiTheme.js","components/App.js","reducers/assets.js","reducers/presentations.js","reducers/assetFilters.js","reducers/currentPresentationId.js","reducers/dialog.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","config","ErrorBanner","_ref","message","classes","react_default","a","createElement","Fragment","CssBaseline","Paper","elevation","className","paper","Box","pb","Grid","container","spacing","alignItems","wrap","item","bgcolor","clone","Avatar","Error_default","Typography","justify","Button","color","onClick","reload","Divider","defaultProps","withStyles","theme","paddingTop","ErrorBoundary","state","hasError","errorMessage","error","info","this","setState","props","Status_ErrorBanner","errorBanner","children","Component","avatar","require","drawerListItems","label","path","icon","Slideshow_default","Collections_default","HomeLayout","mobileOpen","handleDrawerToggle","_this","getTitle","find","_this$props","pathname","drawer","toolbar","root","alt","src","variant","noWrap","List","list","map","listItem","ListItem","button","key","selected","component","Link","to","ListItemIcon","ListItemText","primary","AppBar","position","appBar","Toolbar","IconButton","aria-label","menuButton","Menu_default","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","drawerPaper","xsDown","content","Status_ErrorBoundary","compose","withRouter","display","Object","defineProperty","breakpoints","up","width","flexShrink","marginLeft","concat","marginRight","objectSpread","mixins","paddingLeft","borderRight","flexGrow","padding","height","overflow","margin","name","withTheme","createActions","SHOW_DIALOG","dialogType","dialogProps","HIDE_DIALOG","showDialog","hideDialog","PRESENTATIONS_API_URL","api","getOne","id","axios","get","getAll","update","toUpdate","put","create","toCreate","post","delete","EXCLUDE_ASSETS","assetsToExclude","ADD_ASSET_TO_EXCLUDE","asset","REMOVE_ASSET_FROM_EXCLUDE","FILTER_ASSET_CATEGORY","category","excludeAssets","addAssetToExclude","removeAssetFromExclude","filterAssetCategory","ADD_ASSET","presentationId","assetId","newAssetIndex","REORDER_ASSET","oldAssetIndex","REMOVE_ASSET","assetIndex","SET_CURRENT_PRESENTATION_ID","FETCH_PRESENTATION_LIST_BEGIN","FETCH_PRESENTATION_LIST_SUCCESS","presentationList","FETCH_PRESENTATION_LIST_FAILURE","FETCH_PRESENTATION_BEGIN","FETCH_PRESENTATION_SUCCESS","presentation","FETCH_PRESENTATION_FAILURE","CREATE_PRESENTATION_BEGIN","CREATE_PRESENTATION_SUCCESS","CREATE_PRESENTATION_FAILURE","SAVE_PRESENTATION_BEGIN","SAVE_PRESENTATION_SUCCESS","SAVE_PRESENTATION_FAILURE","DELETE_PRESENTATION_BEGIN","DELETE_PRESENTATION_SUCCESS","DELETE_PRESENTATION_FAILURE","addAsset","reorderAsset","removeAsset","setCurrentPresentationId","fetchPresentationListBegin","fetchPresentationListSuccess","fetchPresentationListFailure","fetchPresentationBegin","fetchPresentationSuccess","fetchPresentationFailure","createPresentationBegin","createPresentationSuccess","createPresentationFailure","savePresentationBegin","savePresentationSuccess","savePresentationFailure","deletePresentationBegin","deletePresentationSuccess","deletePresentationFailure","savePresentationState","dispatch","getState","presentations","presentationsById","savePresentation","createPresentation","title","shortid","generate","newPresentation","selectedAssets","then","res","data","catch","deletePresentation","NewPresentationDialog","isCreateDisabled","handleChange","event","newTitle","target","value","isEmpty","handleCreate","preventDefault","onCreate","Dialog","fullWidth","maxWidth","aria-labelledby","DialogTitle","noValidate","onSubmit","DialogContent","TextField","autoFocus","type","onChange","DialogActions","disabled","mapDispatchToProps","connect","EditPresentationTitleDialog","isSaveDisabled","assign","handleSave","onSave","nextProps","isEqual","currentPresentationId","closeButton","right","top","palette","grey","disableTypography","Close_default","resourceTypes","image","video","pdf","resourceCategories","images","videos","pdfs","getResourceTypeForThumbnail","resourceType","getAssetTitle","_asset$context","context","custom","caption","getAssetDescription","_asset$context2","dimensions","boundingWidth","Math","floor","boundingHeight","resource_type","Config","public_id","renderPDF","lib","publicId","controls","renderVideo","crop","quality","fetchFormat","renderImage","renderAsset","PreviewPresentationDialog","activeStep","handleNext","prevState","handleBack","handleStepChange","_this2","assets","fullScreen","maxSteps","length","dialogPaper","Dialog_DialogTitleWithClose","dialogContent","react_container_dimensions_lib_default","react_swipeable_views_lib_default","axis","index","onChangeIndex","enableMouseEvents","swipeableViews","abs","Asset_AssetPreview","dialogActions","MobileStepper","steps","mobileStepper","nextButton","size","KeyboardArrowLeft_default","KeyboardArrowRight_default","backButton","dialogs","editPresentationTitle","presentationPreview","assetsById","minHeight","flex","textAlign","overflowY","assetPreview","deletePresentationConfirmation","disableBackdropClick","disableEscapeKeyDown","onDeleteConfirm","_ref2","dialog","SpecificDialog","findKey","FETCH_ASSETS_BEGIN","FETCH_ASSETS_SUCCESS","FETCH_ASSETS_FAILURE","fetchAssetsBegin","fetchAssetsSuccess","fetchAssetsFailure","fetchAssets","URL_PREFIX","URL_SUFFIX","IMAGE_LIST_URL","VIDEO_LIST_URL","all","spread","imageListRes","videoListRes","resources","resource","format","assetImage","left","objectFit","responsive","startOffset","aspectRatio","card","flexDirection","&:hover","boxShadow","shadows","cardMedia","cardContent","other","objectWithoutProperties","Card","Thumbnail_ResponsiveThumbnail","firstAsset","getThumbnail","CardContent","Truncate","overlay","backgroundColor","bottom","overlayContainer","cardActionButton","border","borderRadius","transition","& svg","cardActionIcon","cardActionLabel","cursor","verticalAlign","WrappedComponent","propName","arguments","undefined","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","isHovered","onMouseEnter","onMouseLeave","inherits","createClass","cardActions","PlayArrow_default","onPlay","Edit_default","onEdit","Delete_default","onDelete","PresentationList_PresentationCard","style","alignContent","action","i","htmlFor","spinner","justifyContent","area","promiseInProgress","usePromiseTracker","Fade","in","transitionDelay","unmountOnExit","CircularProgress","emptyFolder","gridContainer","only","& > img","opacity","subtitle","align","gutterBottom","PresentationList","toPresentation","handleAdd","onCreatePresentation","enqueueSnackbar","trackPromise","fetchPresentationList","loading","Status_EmptyState","Error","handleErrors","handleEmptyState","values","xs","sm","md","lg","PresentationList_PresentationCardWithActionOverlay","_this$props2","react_router","cardGrid","renderPresentationList","Status_LoadingSpinner","Fab","fab","Add_default","transform","withSnackbar","assetFilters","listFilter","assetFilterCategory","assetCategoryItems","Image_default","Videocam_default","PictureAsPdf_default","selectors_assets","exclude","differenceWith","filter","placeholder","anchorEl","readOnly","Menu_Menu","stopPropagation","clearAnchor","MenuItem","handlePreview","Visibility_default","handleRemove","getItemStyle","isDragging","draggableStyle","userSelect","marginBottom","DraggableAsset","handleClickAsset","handleClickMoreOptions","currentTarget","removeAssetFromPresentation","react_beautiful_dnd_esm","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","zeroMinWidth","lines","aria-owns","aria-haspopup","MoreVert_default","Asset_DraggableAssetMenu","AssetLibraryDroppable","libraryAssets","droppableId","isDropDisabled","RootRef","rootRef","assetWrapper","Asset_DraggableAsset","assetSpacing","emptyStateAvatar","getVisibleAssets","paddingRight","minWidth","getListStyle","isDraggingOver","assetsWrapper","slideNumber","slideAsset","isEmptyPresentation","PresentationAssets","onDragEnd","source","destination","addAssetToPresentation","reorderAssetInPresentation","_this$props3","rootGrid","assetCategoryWrapper","Presentation_AssetCategoryFilterList","Presentation_AssetLibraryDroppable","Presentation_SelectedAssetsDroppable","marginTop","Presentation","toHome","handleEditTitle","handleEditTitleSave","routeId","fetchPresentation","errorExists","editIcon","grow","classNames","rightIcon","iconSmall","Presentation_PresentationAssets","ownProps","params","input","fontSize","AssetLibrary","renderTabs","Tabs","indicatorColor","textColor","centered","Tab","description","renderAssetList","renderEmptyState","paddingBottom","BLUE_GRADIENT","muiTheme","main","secondary","background","default","typography","useNextVariants","overrides","MuiDrawer","& *","MuiAppBar","colorDefault","MuiFab","MuiList","MuiListItem","borderLeft","&$selected&$button","&$button:hover, &$button:focus","MuiListItemIcon","MuiListItemText","createMuiTheme","CustomMuiTheme","RouteWithLayout","layout","rest","render","React","App","cloudName","uploadPreset","build","maxSnack","MuiThemeProvider","react_router_dom","App_RouteWithLayout","exact","Dialog_DialogRoot","contextTypes","PropTypes","string","handleActions","Map","payload","reduce","_action$payload","from","splice","_action$payload2","newAssets","_newAssets$splice","removedAsset","slicedToArray","_action$payload3","combineActions","_state$presentationsB","restOfPresentations","_toPropertyKey","initialState","toConsumableArray","without","handleAction","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","react_redux_es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.932a825b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.dbce7bfe.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/empty-folder.39e6ac47.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n  cloudName: 'duvf2n0iv',\n  uploadPreset: 'ehabsebh',\n  tag: 'sales-presentation-app'\n};\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing(5),\n  },\n});\n\nconst ErrorBanner = ({ message, classes }) => {\n  const onRetry = () => {\n    window.location.reload();\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper elevation={0} className={classes.paper}>\n        <Box pb={1}>\n          <Grid container spacing={2} alignItems=\"center\" wrap=\"nowrap\">\n            <Grid item>\n              <Box bgcolor=\"primary.main\" clone>\n                <Avatar>\n                  <ErrorIcon />\n                </Avatar>\n              </Box>\n            </Grid>\n            <Grid item>\n              <Typography>\n                {message}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"flex-end\" spacing={1}>\n            <Grid item>\n              <Button color=\"primary\" onClick={onRetry}>Retry</Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n      <Divider />\n    </React.Fragment>\n  );\n};\n\nErrorBanner.propTypes = {\n  message: PropTypes.string,\n};\n\nErrorBanner.defaultProps = {\n  message: 'There was an issue with the service. Please retry.',\n};\n\nexport default withStyles(styles)(ErrorBanner);\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ErrorBanner from './ErrorBanner';\n\nconst styles = theme => ({\n  errorBanner: {}\n});\n\nclass ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n    errorMessage: ''\n  };\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true, errorMessage: error.message });\n  }\n\n  render() {\n    const { classes } = this.props;\n    if (this.state.hasError) {\n      return (\n        <ErrorBanner\n          message={this.state.errorMessage}\n          classes={{ paper: classes.errorBanner }}\n        />\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default withStyles(styles)(ErrorBoundary);\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { find } from 'lodash';\nimport { Link, withRouter } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport CollectionsIcon from '@material-ui/icons/Collections';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SlideshowIcon from '@material-ui/icons/Slideshow';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\n\nimport ErrorBoundary from '../Status/ErrorBoundary';\n\nconst avatar = require('../../images/avatar.jpeg');\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n    paddingLeft: theme.spacing(1),\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    borderRight: 'none',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    height: '100vh',\n    overflow: 'auto',\n  },\n  avatar: {\n    margin: 10,\n    width: 60,\n    height: 60,\n  },\n  name: {\n    padding: theme.spacing(3),\n  },\n  list: {\n    paddingTop: theme.spacing(6),\n  },\n});\n\nconst drawerListItems = [\n  {\n    label: 'Presentations',\n    path: '/',\n    icon: <SlideshowIcon />\n  },\n  {\n    label: 'Asset Library',\n    path: '/assets',\n    icon: <CollectionsIcon />\n  },\n];\n\nclass HomeLayout extends Component {\n  state = {\n    mobileOpen: false,\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  getTitle = (path) => {\n    return find(drawerListItems, { path }).label;\n  }\n\n  render() {\n    const { classes, theme, children, location: { pathname } } = this.props;\n\n    const drawer = (\n      <div>\n        <div className={classes.toolbar}>\n          <Grid container className={classes.root} spacing={1} alignItems=\"center\">\n            <Grid item>\n              <Avatar alt=\"John Doe\" src={avatar} className={classes.avatar} />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                John Doe\n              </Typography>\n            </Grid>\n          </Grid>\n        </div>\n        <List className={classes.list}>\n          {drawerListItems.map(listItem => (\n            <ListItem\n              button\n              key={listItem.label}\n              selected={pathname === listItem.path}\n              component={Link}\n              to={listItem.path}\n            >\n              <ListItemIcon>{listItem.icon}</ListItemIcon>\n              <ListItemText primary={listItem.label} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"fixed\" className={classes.appBar} color=\"default\">\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              {this.getTitle(pathname)}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <nav className={classes.drawer}>\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={this.props.container}\n              variant=\"temporary\"\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n              open={this.state.mobileOpen}\n              onClose={this.handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <ErrorBoundary>\n            {children}\n          </ErrorBoundary>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withStyles(styles, { withTheme: true })\n)(HomeLayout);\n","import { createActions } from 'redux-actions';\n\nexport const {\n  showDialog,\n  hideDialog\n} = createActions({\n  'SHOW_DIALOG': (dialogType, dialogProps) => ({ dialogType, dialogProps }),\n  'HIDE_DIALOG': () => {}\n});\n","import axios from 'axios';\n\nconst PRESENTATIONS_API_URL = 'http://localhost:4000/api/presentations';\n\nexport default {\n  presentations: {\n    getOne: id => axios.get(`${PRESENTATIONS_API_URL}/${id}`),\n    getAll: () => axios.get(PRESENTATIONS_API_URL),\n    update: (id, toUpdate) => axios.put(`${PRESENTATIONS_API_URL}/${id}`, toUpdate),\n    create: toCreate => axios.post(PRESENTATIONS_API_URL, toCreate),\n    delete: id => axios.delete(`${PRESENTATIONS_API_URL}/${id}`)\n  }\n};\n","import { createActions } from 'redux-actions';\n\nexport const {\n  excludeAssets,\n  addAssetToExclude,\n  removeAssetFromExclude,\n  filterAssetCategory\n} = createActions({\n  'EXCLUDE_ASSETS': assetsToExclude => assetsToExclude,\n  'ADD_ASSET_TO_EXCLUDE': asset => asset,\n  'REMOVE_ASSET_FROM_EXCLUDE': asset => asset,\n  'FILTER_ASSET_CATEGORY': category => category\n});\n","import { createActions } from 'redux-actions';\nimport shortid from 'shortid';\n\nimport api from '../services/api';\nimport { removeAssetFromExclude } from './assetFilters';\n\nexport const {\n  addAsset,\n  reorderAsset,\n  removeAsset,\n  setCurrentPresentationId,\n  fetchPresentationListBegin,\n  fetchPresentationListSuccess,\n  fetchPresentationListFailure,\n  fetchPresentationBegin,\n  fetchPresentationSuccess,\n  fetchPresentationFailure,\n  createPresentationBegin,\n  createPresentationSuccess,\n  createPresentationFailure,\n  savePresentationBegin,\n  savePresentationSuccess,\n  savePresentationFailure,\n  deletePresentationBegin,\n  deletePresentationSuccess,\n  deletePresentationFailure\n} = createActions({\n  'ADD_ASSET': (presentationId, assetId, newAssetIndex) => ({\n    presentationId,\n    assetId,\n    newAssetIndex\n  }),\n  'REORDER_ASSET': (presentationId, oldAssetIndex, newAssetIndex) => ({\n    presentationId,\n    oldAssetIndex,\n    newAssetIndex\n  }),\n  'REMOVE_ASSET': (presentationId, assetIndex) => ({\n    presentationId,\n    assetIndex\n  }),\n  'SET_CURRENT_PRESENTATION_ID': presentationId => presentationId,\n  'FETCH_PRESENTATION_LIST_BEGIN': () => {},\n  'FETCH_PRESENTATION_LIST_SUCCESS': presentationList => presentationList,\n  'FETCH_PRESENTATION_LIST_FAILURE': error => error,\n  'FETCH_PRESENTATION_BEGIN': () => {},\n  'FETCH_PRESENTATION_SUCCESS': presentation => presentation,\n  'FETCH_PRESENTATION_FAILURE': error => error,\n  'CREATE_PRESENTATION_BEGIN': () => {},\n  'CREATE_PRESENTATION_SUCCESS': presentation => presentation,\n  'CREATE_PRESENTATION_FAILURE': error => error,\n  'SAVE_PRESENTATION_BEGIN': () => {},\n  'SAVE_PRESENTATION_SUCCESS': presentation => presentation,\n  'SAVE_PRESENTATION_FAILURE': error => error,\n  'DELETE_PRESENTATION_BEGIN': () => {},\n  'DELETE_PRESENTATION_SUCCESS': id => id,\n  'DELETE_PRESENTATION_FAILURE': error => error\n});\n\nconst savePresentationState = (dispatch, getState, presentationId) => {\n  const presentation = getState().presentations.presentationsById[\n    presentationId\n  ];\n  dispatch(savePresentation(presentation));\n};\n\nexport const addAssetToPresentation = (\n  presentationId,\n  assetId,\n  newAssetIndex\n) => {\n  return (dispatch, getState) => {\n    dispatch(addAsset(presentationId, assetId, newAssetIndex));\n    savePresentationState(dispatch, getState, presentationId);\n  };\n};\n\nexport const reorderAssetInPresentation = (\n  presentationId,\n  oldAssetIndex,\n  newAssetIndex\n) => {\n  return (dispatch, getState) => {\n    dispatch(reorderAsset(presentationId, oldAssetIndex, newAssetIndex));\n    savePresentationState(dispatch, getState, presentationId);\n  };\n};\n\nexport const removeAssetFromPresentation = (\n  presentationId,\n  assetId,\n  assetIndex\n) => {\n  return (dispatch, getState) => {\n    dispatch(removeAsset(presentationId, assetIndex));\n    dispatch(removeAssetFromExclude(assetId));\n    savePresentationState(dispatch, getState, presentationId);\n  };\n};\n\nexport const fetchPresentationList = () => {\n  const ERROR_MESSAGE = 'Unable to load presentations.';\n  return dispatch => {\n    dispatch(fetchPresentationListBegin());\n    return api.presentations.getAll()\n      .then(res => dispatch(fetchPresentationListSuccess(res.data)))\n      .catch(error => dispatch(fetchPresentationListFailure(ERROR_MESSAGE)));\n  };\n};\n\nexport const fetchPresentation = (id) => {\n  const ERROR_MESSAGE = 'Unable to load presentation.';\n  return dispatch => {\n    dispatch(fetchPresentationBegin());\n    return api.presentations.getOne(id)\n      .then(res => dispatch(fetchPresentationSuccess(res.data)))\n      .catch(error => dispatch(fetchPresentationFailure(ERROR_MESSAGE)))\n  };\n};\n\nexport const createPresentation = (title) => {\n  const id = shortid.generate();\n  const newPresentation = {\n    id,\n    title,\n    selectedAssets: []\n  };\n  const ERROR_MESSAGE = 'Unable to create presentation.';\n  return dispatch => {\n    dispatch(createPresentationBegin());\n    return api.presentations.create(newPresentation)\n      .then(res => {\n        dispatch(createPresentationSuccess(res.data));\n        dispatch(setCurrentPresentationId(id));\n      })\n      .catch(error => dispatch(createPresentationFailure(ERROR_MESSAGE)));\n  };\n};\n\nexport const savePresentation = (presentation) => {\n  const ERROR_MESSAGE = 'Unable to save presentation.';\n  return dispatch => {\n    dispatch(savePresentationBegin());\n    return api.presentations.update(presentation.id, presentation)\n      .then(res => dispatch(savePresentationSuccess(res.data)))\n      .catch(error => dispatch(savePresentationFailure(ERROR_MESSAGE)));\n  };\n};\n\nexport const deletePresentation = (id) => {\n  const ERROR_MESSAGE = 'Unable to delete presentation.';\n  return dispatch => {\n    dispatch(deletePresentationBegin());\n    return api.presentations.delete(id)\n      .then(dispatch(deletePresentationSuccess(id)))\n      .catch(error => dispatch(deletePresentationFailure(ERROR_MESSAGE)));\n  };\n};\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { isEmpty } from 'lodash';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { hideDialog } from '../../actions/dialog';\nimport { createPresentation } from '../../actions/presentations';\n\nclass NewPresentationDialog extends Component {\n  state = {\n    title: '',\n    isCreateDisabled: true,\n  };\n\n  handleChange = (event) => {\n    const newTitle = event.target.value;\n    this.setState({\n      ...this.state,\n      title: newTitle,\n      isCreateDisabled: isEmpty(newTitle)\n    });\n  };\n\n  handleCreate = (event) => {\n    event.preventDefault();\n    this.props.createPresentation(this.state.title)\n      .then(this.props.hideDialog)\n      .then(this.props.onCreate);\n  };\n\n  render() {\n    const { hideDialog } = this.props;\n\n    return (\n      <Dialog\n        onClose={hideDialog}\n        fullWidth={true}\n        maxWidth=\"sm\"\n        aria-labelledby=\"form-dialog-title\"\n        open={true}\n      >\n        <DialogTitle id=\"form-dialog-title\">Create Presentation</DialogTitle>\n        <form noValidate onSubmit={this.handleCreate}>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"presentation-title\"\n              label=\"Title\"\n              type=\"text\"\n              onChange={this.handleChange}\n              value={this.state.title}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={hideDialog} color=\"primary\">\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              disabled={this.state.isCreateDisabled}\n            >\n              Create\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    );\n  }\n}\n\nNewPresentationDialog.propTypes = {\n  onCreate: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  hideDialog,\n  createPresentation\n};\n\nexport default compose(\n  connect(null, mapDispatchToProps)\n)(NewPresentationDialog);\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { isEqual, isEmpty } from 'lodash';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { hideDialog } from '../../actions/dialog';\nimport { savePresentation } from '../../actions/presentations';\n\nclass EditPresentationTitleDialog extends Component {\n  state = {\n    presentation: {},\n    isSaveDisabled: true,\n  };\n\n  componentDidMount() {\n    const { presentation } = this.props;\n    this.setState({ ...this.state, presentation });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!isEqual(nextProps.presentation, this.state.presentation)) {\n      this.setState({ ...this.state, presentation: nextProps.presentation });\n    }\n  }\n\n  handleChange = (event) => {\n    const title = event.target.value;\n    const presentation = Object.assign({}, this.state.presentation, { title });\n    this.setState({\n      ...this.state,\n      presentation,\n      isSaveDisabled: isEmpty(title)\n    });\n  };\n\n  handleSave = (event) => {\n    event.preventDefault();\n    this.props.savePresentation(this.state.presentation)\n      .then(this.props.hideDialog)\n      .then(this.props.onSave);\n  };\n\n  render() {\n    const { hideDialog } = this.props;\n\n    return (\n      <Dialog\n        onClose={hideDialog}\n        fullWidth={true}\n        maxWidth=\"sm\"\n        aria-labelledby=\"form-dialog-title\"\n        open={true}\n      >\n        <DialogTitle id=\"form-dialog-title\">Edit Presentation Title</DialogTitle>\n        <form noValidate onSubmit={this.handleSave}>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"presentation-title\"\n              label=\"Title\"\n              type=\"text\"\n              onChange={this.handleChange}\n              value={this.state.presentation.title}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={hideDialog} color=\"primary\">\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              disabled={this.state.isSaveDisabled}\n            >\n              Save\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    );\n  }\n}\n\nEditPresentationTitleDialog.propTypes = {\n  onSave: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({\n  currentPresentationId,\n  presentations: { presentationsById }\n}) => ({\n  presentation: presentationsById[currentPresentationId]\n});\n\nconst mapDispatchToProps = {\n  hideDialog,\n  savePresentation\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps)\n)(EditPresentationTitleDialog);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[700],\n  },\n});\n\nconst DialogTitleWithClose = ({ children, classes, onClose }) => (\n  <MuiDialogTitle disableTypography className={classes.root}>\n    <Typography variant=\"h6\">{children}</Typography>\n    {onClose ? (\n      <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\n        <CloseIcon />\n      </IconButton>\n    ) : null}\n  </MuiDialogTitle>\n);\n\nDialogTitleWithClose.propTypes = {\n  onClose: PropTypes.func,\n};\n\nexport default withStyles(styles)(DialogTitleWithClose);\n","export const resourceTypes = {\n  image: 'image',\n  video: 'video',\n  pdf: 'pdf'\n};\n\nexport const resourceCategories = {\n  images: 'images',\n  videos: 'videos',\n  pdfs: 'pdfs'\n};\n\nexport const getResourceTypeForThumbnail = resourceType => (\n  resourceType === resourceTypes.image || resourceType === resourceTypes.pdf\n    ? resourceTypes.image\n    : resourceTypes.video\n);\n\nexport const getAssetTitle = (asset) => {\n  const DEFAULT_TITLE = 'Title';\n  const {\n    context: { custom: { caption: title } } = {\n      custom: { caption: DEFAULT_TITLE }\n    }\n  } = asset;\n  return title;\n};\n\nexport const getAssetDescription = (asset) => {\n  const DEFAULT_DESCRIPTION = 'Description';\n  const {\n    context: { custom: { alt: description } } = {\n      custom: { alt: DEFAULT_DESCRIPTION }\n    }\n  } = asset;\n  return description;\n};\n","import React from 'react';\nimport { withTheme } from '@material-ui/core/styles';\nimport { Image, Video } from 'cloudinary-react';\nimport PropTypes from 'prop-types';\n\nimport Config from '../../config/config';\nimport { resourceTypes } from '../../utils/AssetUtils';\n\nconst AssetPreview = ({ asset, dimensions, theme }) => {\n  const renderImage = (asset, boundingWidth, boundingHeight) => {\n    return (\n      <Image\n        publicId={asset.public_id}\n        width={boundingWidth}\n        height={boundingHeight}\n        crop=\"fit\"\n        quality=\"auto\"\n        fetchFormat=\"auto\">\n      </Image>\n    );\n  };\n\n  const renderPDF = (asset, boundingWidth, boundingHeight) => {\n    // Assume browser has plugin for rendering PDF already for demo purposes,\n    // otherwise can use react-pdf for better support and consistency.\n    return (\n      <embed\n        src={`http://res.cloudinary.com/${Config.cloudName}/image/upload/${asset.public_id}`}\n        width={boundingWidth}\n        height={boundingHeight}\n      />\n    );\n  };\n\n  const renderVideo = (asset, boundingWidth, boundingHeight) => {\n    return (\n      <Video\n        publicId={asset.public_id}\n        controls={true}\n        width={boundingWidth}\n        height={boundingHeight}\n      >\n      </Video>\n    );\n  };\n\n  const renderAsset = (asset, dimensions, theme) => {\n    const padding = theme.spacing(3);\n    const boundingWidth = Math.floor(dimensions.width - padding * 2);\n    const boundingHeight = Math.floor(dimensions.height - padding * 2);\n\n    switch(asset.resource_type) {\n      case resourceTypes.pdf:\n        return renderPDF(asset, boundingWidth, boundingHeight);\n      case resourceTypes.video:\n        return renderVideo(asset, boundingWidth, boundingHeight);\n      default:\n        return renderImage(asset, boundingWidth, boundingHeight);\n    }\n  }\n\n  return renderAsset(asset, dimensions, theme);\n};\n\nAssetPreview.propTypes = {\n  asset: PropTypes.object,\n  dimensions: PropTypes.object,\n};\n\nexport default withTheme(AssetPreview);\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport ContainerDimensions from 'react-container-dimensions';\n\nimport { hideDialog } from '../../actions/dialog';\nimport DialogTitleWithClose from './DialogTitleWithClose';\nimport AssetPreview from '../Asset/AssetPreview';\n\nconst styles = theme => ({\n  dialogPaper: {\n    minHeight: '90vh',\n  },\n  dialogActions: {\n    margin: 0,\n  },\n  mobileStepper: {\n    flexGrow: 1,\n  },\n  dialogContent: {\n    display: 'flex',\n  },\n  swipeableViews: {\n    flex: 1,\n    textAlign: 'center',\n    overflowY: 'hidden',\n  },\n});\n\nclass PreviewPresentationDialog extends Component {\n  state = {\n    activeStep: 0,\n  };\n\n  handleNext = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      activeStep: prevState.activeStep + 1,\n    }));\n  };\n\n  handleBack = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      activeStep: prevState.activeStep - 1,\n    }));\n  };\n\n  handleStepChange = activeStep => {\n    this.setState(prevState => ({\n      ...prevState,\n      activeStep\n    }));\n  };\n\n  render() {\n    const {\n      classes,\n      theme,\n      assets,\n      presentation,\n      fullScreen,\n      hideDialog\n    } = this.props;\n    const { activeStep } = this.state;\n    const maxSteps = presentation.selectedAssets.length;\n\n    return (\n      <Dialog\n        onClose={hideDialog}\n        fullWidth={true}\n        maxWidth=\"xl\"\n        classes={{ paper: classes.dialogPaper }}\n        open={true}\n        fullScreen={Boolean(fullScreen)}\n      >\n        <DialogTitleWithClose onClose={hideDialog} />\n        <DialogContent className={classes.dialogContent}>\n          <ContainerDimensions>\n            { dimensions => (\n              <SwipeableViews\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={activeStep}\n                onChangeIndex={this.handleStepChange}\n                enableMouseEvents\n                className={classes.swipeableViews}\n              >\n                {presentation.selectedAssets.map((assetId, index) => (\n                  <div key={assetId}>\n                    {Math.abs(activeStep - index) <= 2 ? (\n                      <AssetPreview asset={assets[assetId]} dimensions={dimensions} />\n                    ) : null}\n                  </div>\n                ))}\n              </SwipeableViews>\n            )}\n          </ContainerDimensions>\n        </DialogContent>\n        <DialogActions className={classes.dialogActions}>\n          <MobileStepper\n            steps={maxSteps}\n            position=\"static\"\n            activeStep={activeStep}\n            className={classes.mobileStepper}\n            nextButton={\n              <Button size=\"small\" onClick={this.handleNext} disabled={activeStep === maxSteps - 1}>\n                Next\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n              </Button>\n            }\n            backButton={\n              <Button size=\"small\" onClick={this.handleBack} disabled={activeStep === 0}>\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                Back\n              </Button>\n            }\n          />\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nPreviewPresentationDialog.propTypes = {\n  presentation: PropTypes.object.isRequired,\n  fullScreen: PropTypes.bool,\n};\n\nconst mapStateToProps = ({\n  assets: { assetsById }\n}) => ({\n  assets: assetsById\n});\n\nconst mapDispatchToProps = {\n  hideDialog\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withStyles(styles, { withTheme: true })\n)(PreviewPresentationDialog);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport ContainerDimensions from 'react-container-dimensions';\n\nimport { hideDialog } from '../../actions/dialog';\nimport DialogTitleWithClose from './DialogTitleWithClose';\nimport AssetPreview from '../Asset/AssetPreview';\n\nconst styles = theme => ({\n  dialogPaper: {\n    minHeight: '90vh',\n  },\n  dialogContent: {\n    display: 'flex',\n  },\n  asset: {\n    flex: 1,\n    textAlign: 'center',\n    overflowY: 'hidden',\n  },\n});\n\nconst PreviewAssetDialog = props => {\n  const { classes, asset, assets, hideDialog } = props;\n\n  return (\n    <Dialog\n      onClose={hideDialog}\n      fullWidth={true}\n      maxWidth=\"xl\"\n      classes={{ paper: classes.dialogPaper }}\n      open={true}\n    >\n      <DialogTitleWithClose onClose={hideDialog} />\n      <DialogContent className={classes.dialogContent}>\n        <ContainerDimensions>\n          {dimensions => (\n            <div className={classes.asset}>\n              <AssetPreview asset={assets[asset.public_id]} dimensions={dimensions} />\n            </div>\n          )}\n        </ContainerDimensions>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nPreviewAssetDialog.propTypes = {\n  asset: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = ({ assets: { assetsById } }) => ({\n  assets: assetsById\n});\n\nconst mapDispatchToProps = {\n  hideDialog\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withStyles(styles)\n)(PreviewAssetDialog);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { hideDialog } from '../../actions/dialog';\nimport { deletePresentation } from '../../actions/presentations';\n\nconst DeletePresentationConfirmationDialog = props => {\n  const { hideDialog } = props;\n\n  const handleDelete = () => {\n    const { deletePresentation, hideDialog, onDeleteConfirm, id } = props;\n    deletePresentation(id)\n      .then(hideDialog)\n      .then(() => onDeleteConfirm(id));\n  };\n\n  return (\n    <Dialog\n      onClose={hideDialog}\n      fullWidth={true}\n      maxWidth=\"xs\"\n      aria-labelledby=\"alert-dialog-title\"\n      open={true}\n      disableBackdropClick\n      disableEscapeKeyDown\n    >\n      <DialogTitle id=\"alert-dialog-title\">Delete presentation?</DialogTitle>\n      <DialogActions>\n        <Button onClick={hideDialog} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleDelete} color=\"primary\">\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nDeletePresentationConfirmationDialog.propTypes = {\n  id: PropTypes.string.isRequired,\n  onDeleteConfirm: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  hideDialog,\n  deletePresentation\n};\n\nexport default compose(\n  connect(null, mapDispatchToProps)\n)(DeletePresentationConfirmationDialog);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { findKey } from 'lodash';\nimport PropTypes from 'prop-types';\n\nimport NewPresentationDialog from './NewPresentationDialog';\nimport EditPresentationTitleDialog from './EditPresentationTitleDialog';\nimport PreviewPresentationDialog from './PreviewPresentationDialog';\nimport PreviewAssetDialog from './PreviewAssetDialog';\nimport DeletePresentationConfirmationDialog from './DeletePresentationConfirmationDialog';\n\nexport const dialogs = {\n  newPresentation: {\n    type: 'NEW_PRESENTATION_DIALOG',\n    component: NewPresentationDialog\n  },\n  editPresentationTitle: {\n    type: 'EDIT_PRESENTATION_TITLE_DIALOG',\n    component: EditPresentationTitleDialog\n  },\n  presentationPreview: {\n    type: 'PRESENTATION_PREVIEW_DIALOG',\n    component: PreviewPresentationDialog\n  },\n  assetPreview: {\n    type: 'ASSET_PREVIEW_DIALOG',\n    component: PreviewAssetDialog\n  },\n  deletePresentationConfirmation: {\n    type: 'DELETE_PRESENTATION_CONFIRMATION_DIALOG',\n    component: DeletePresentationConfirmationDialog\n  }\n};\n\nconst DialogRoot = ({ dialogType, dialogProps }) => {\n  if (!dialogType) {\n    return null;\n  }\n\n  const SpecificDialog =\n    dialogs[findKey(dialogs, { type: dialogType })].component;\n  return <SpecificDialog {...dialogProps} />;\n};\n\nDialogRoot.propTypes = {\n  dialogType: PropTypes.string,\n  dialogProps: PropTypes.object,\n};\n\nexport default compose(\n  connect(({ dialog }) => dialog)\n)(DialogRoot);\n","import { createActions } from 'redux-actions';\nimport axios from 'axios';\n\nimport Config from '../config/config';\nimport { resourceTypes } from '../utils/AssetUtils';\n\nexport const {\n  fetchAssetsBegin,\n  fetchAssetsSuccess,\n  fetchAssetsFailure\n} = createActions({\n  'FETCH_ASSETS_BEGIN': () => {},\n  'FETCH_ASSETS_SUCCESS': assets => assets,\n  'FETCH_ASSETS_FAILURE': error => error\n});\n\n// Fetch all images, videos, PDF assets\n// PDFs are uploaded to Cloudinary as image types\n// https://cloudinary.com/documentation/image_transformations#delivering_content_from_pdf_files\nexport const fetchAssets = () => {\n  // Cloudinary JSON response is cached at CDN for an hour\n  const URL_PREFIX = `https://res.cloudinary.com/${Config.cloudName}`;\n  const URL_SUFFIX = `list/${Config.tag}.json`;\n  const IMAGE_LIST_URL = `${URL_PREFIX}/image/${URL_SUFFIX}`;\n  const VIDEO_LIST_URL = `${URL_PREFIX}/video/${URL_SUFFIX}`;\n\n  const ERROR_MESSAGE = 'Unable to load assets.';\n\n  return dispatch => {\n    dispatch(fetchAssetsBegin());\n    return axios\n      .all([axios.get(IMAGE_LIST_URL), axios.get(VIDEO_LIST_URL)])\n      .then(\n        axios.spread((imageListRes, videoListRes) => {\n          const images = imageListRes.data.resources;\n          const videos = videoListRes.data.resources;\n          // Set asset resource types for categorization\n          images.map(\n            resource =>\n              (resource.resource_type =\n                resource.format === resourceTypes.pdf\n                  ? resourceTypes.pdf\n                  : resourceTypes.image)\n          );\n          videos.map(resource => (resource.resource_type = resourceTypes.video));\n\n          return dispatch(fetchAssetsSuccess(images.concat(videos)));\n        })\n      )\n      .catch(error => dispatch(fetchAssetsFailure(ERROR_MESSAGE)));\n  };\n}\n","import React from 'react';\nimport { isEmpty } from 'lodash';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Image, Transformation, Video } from 'cloudinary-react';\nimport PropTypes from 'prop-types';\n\nimport {\n  resourceTypes,\n  getResourceTypeForThumbnail\n} from '../../utils/AssetUtils';\n\n\nconst styles = theme => ({\n  assetImage: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    height: '100%',\n    width: '100%',\n    objectFit: 'cover',\n  },\n});\n\nconst ResponsiveThumbnail = ({ asset, classes }) => {\n  if (!isEmpty(asset)) {\n    const resourceType = asset.resource_type;\n    const urlResourceType = getResourceTypeForThumbnail(resourceType);\n\n    switch (urlResourceType) {\n      case resourceTypes.video:\n        return (\n          <Video\n            responsive\n            publicId={`${asset.public_id}.jpg`}\n            width=\"auto\"\n            crop=\"scale\"\n            quality=\"auto\"\n            fetchFormat=\"auto\"\n            resourceType=\"video\"\n            className={classes.assetImage}>\n            <Transformation startOffset=\"0\" />\n          </Video>\n        );\n      default:\n        return (\n          <Image\n            responsive\n            publicId={`${asset.public_id}.jpg`}\n            width=\"auto\"\n            crop=\"scale\"\n            aspectRatio=\"1.0\"\n            quality=\"auto\"\n            fetchFormat=\"auto\"\n            className={classes.assetImage}>\n          </Image>\n        );\n    }\n  } else {\n    return <img className={classes.assetImage} src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\" alt=\"thumbnail\" />; /* eslint-disable-line max-len */\n  }\n};\n\nResponsiveThumbnail.propTypes = {\n  asset: PropTypes.object,\n};\n\nexport default withStyles(styles)(ResponsiveThumbnail);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { isEmpty } from 'lodash';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Truncate from 'react-truncate';\n\nimport ResponsiveThumbnail from '../Thumbnail/ResponsiveThumbnail';\n\nconst styles = theme => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n    '&:hover': {\n      boxShadow: theme.shadows[8],\n    },\n  },\n  cardMedia: {\n    position: 'relative',\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n});\n\nconst PresentationCard = props => {\n  const {\n    classes,\n    presentation,\n    children,\n    assets,\n    dispatch,\n    ...other\n  } = props;\n\n  const getThumbnail = (presentation) => {\n    const { selectedAssets } = presentation;\n    const { assetsById } = assets;\n\n    if (!isEmpty(selectedAssets) && !isEmpty(assetsById)) {\n      const firstAsset = assetsById[selectedAssets[0]];\n      return <ResponsiveThumbnail asset={firstAsset} />;\n    } else {\n      return <ResponsiveThumbnail />;\n    }\n  };\n\n  return (\n    <Card\n      className={classes.card}\n      {...other}\n    >\n      <div className={classes.cardMedia}>\n        {getThumbnail(presentation)}\n      </div>\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h6\" noWrap>\n          <Truncate>{presentation.title}</Truncate>\n        </Typography>\n      </CardContent>\n      {children}\n    </Card>\n  );\n};\n\nPresentationCard.propTypes = {\n  presentation: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = ({ assets }) => ({ assets });\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles)\n)(PresentationCard);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PlayIcon from '@material-ui/icons/PlayArrow';\n\nimport { withHover } from '../../hoc/hoverable-hoc';\nimport PresentationCard from './PresentationCard';\n\nconst styles = theme => ({\n  overlay: {\n    position: 'absolute',\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  overlayContainer: {\n    height: '100%',\n  },\n  cardActionButton: {\n    border: '1px solid white',\n    borderRadius: '50%',\n    width: '2em',\n    height: '2em',\n    '&:hover': {\n      backgroundColor: 'white',\n      transition: 'background-color 0.5s ease',\n      '& svg': {\n        color: 'black'\n      }\n    }\n  },\n  cardActionIcon: {\n    color: 'white',\n  },\n  cardActionLabel: {\n    color: 'white',\n    cursor: 'pointer',\n    verticalAlign: 'middle',\n    paddingLeft: theme.spacing(1),\n  },\n});\n\nconst PresentationCardWithActionOverlay = props => {\n  const { presentation, index, classes } = props;\n  const cardActions = [\n    {\n      id: 'play',\n      label: 'Play',\n      icon: <PlayIcon className={classes.cardActionIcon} />,\n      onClick: props.onPlay,\n    },\n    {\n      id: 'edit',\n      label: 'Edit',\n      icon: <EditIcon className={classes.cardActionIcon} />,\n      onClick: props.onEdit,\n    },\n    {\n      id: 'delete',\n      label: 'Delete',\n      icon: <DeleteIcon className={classes.cardActionIcon} />,\n      onClick: props.onDelete,\n    },\n  ];\n\n  return (\n    <PresentationCard presentation={presentation}>\n      <div\n        className={classes.overlay}\n        style={{ display: props.isHovered ? 'block' : 'none' }}\n      >\n        <Grid\n          container\n          className={classes.overlayContainer}\n          direction=\"column\"\n          justify=\"center\"\n          alignContent=\"center\"\n          spacing={1}\n        >\n          {cardActions.map((action, i) => {\n            const id = `${action.id}${index}-${i}`;\n            return (\n              <Grid item key={id}>\n                <IconButton\n                  className={classes.cardActionButton}\n                  onClick={() => action.onClick(presentation.id)}\n                  id={id}\n                >\n                  {action.icon}\n                </IconButton>\n                <Typography\n                  variant=\"h5\"\n                  component=\"label\"\n                  htmlFor={id}\n                  className={classes.cardActionLabel}\n                  display=\"inline\"\n                >\n                  {action.label}\n                </Typography>\n              </Grid>);\n            })}\n        </Grid>\n      </div>\n    </PresentationCard>\n  );\n};\n\nPresentationCardWithActionOverlay.propTypes = {\n  presentation: PropTypes.object,\n  index: PropTypes.number,\n  onPlay: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n};\n\nexport default compose(\n  withStyles(styles),\n  withHover\n)(PresentationCardWithActionOverlay);\n","import React, { Component } from 'react';\n\nexport const withHover = (WrappedComponent, propName = 'isHovered') => (\n  class extends Component {\n    state = {\n      isHovered: false\n    };\n\n    onMouseEnter = () => {\n      this.setState({ isHovered: true });\n    };\n\n    onMouseLeave = () => {\n      this.setState({ isHovered: false });\n    };\n\n    render() {\n      const props = { [propName]: this.state.isHovered, ...this.props }\n      return (\n        <div\n          onMouseEnter={() => this.onMouseEnter()}\n          onMouseLeave={() => this.onMouseLeave()}\n        >\n          <WrappedComponent { ...props } />\n        </div>\n      )\n    }\n  }\n);\n","import React from 'react';\nimport { usePromiseTracker } from 'react-promise-tracker';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nconst styles = {\n  spinner: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n};\n\nconst LoadingSpinner = ({ area, classes}) => {\n  const { promiseInProgress } = usePromiseTracker({ area });\n\n  return (\n    <Fade\n      in={promiseInProgress}\n      style={{ transitionDelay: promiseInProgress ? '100ms' : '0ms' }}\n      unmountOnExit\n    >\n      <div className={classes.spinner}>\n        <CircularProgress style={{ width: 100, height: 100 }} />\n      </div>\n    </Fade>\n  );\n};\n\nLoadingSpinner.propTypes = {\n  area: PropTypes.string,\n};\n\nexport default withStyles(styles)(LoadingSpinner);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst emptyFolder = require('../../images/empty-folder.png');\n\nconst styles = theme => ({\n  gridContainer: {\n    height: '100%',\n    [theme.breakpoints.only('xs')]: {\n      height: 'auto',\n    },\n  },\n  avatar: {\n    padding: 50,\n    width: 200,\n    height: 200,\n    backgroundColor: theme.palette.grey[200],\n    '& > img': {\n      opacity: 0.5,\n    },\n  },\n});\n\nconst EmptyState = ({ title, subtitle, classes }) => (\n  <Grid\n    container\n    item\n    direction=\"column\"\n    alignItems=\"center\"\n    justify=\"center\"\n    spacing={3}\n    className={classes.gridContainer}\n  >\n    <Grid item>\n      <Avatar alt=\"Empty State\" src={emptyFolder} className={classes.avatar} />\n    </Grid>\n    <Grid item>\n      <Typography component=\"h6\" variant=\"h6\" align=\"center\" gutterBottom>\n        {title}\n      </Typography>\n      <Typography variant=\"subtitle1\" color=\"textSecondary\" align=\"center\">\n        {subtitle}\n      </Typography>\n    </Grid>\n  </Grid>\n);\n\nEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  // Allow subtitle to include some html - node (e.g. <br /> to break to two lines)\n  subtitle: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired\n};\n\nexport default withStyles(styles)(EmptyState);\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { trackPromise} from 'react-promise-tracker';\nimport { withSnackbar } from 'notistack';\nimport { isEmpty } from 'lodash';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport {\n  fetchPresentationList,\n  setCurrentPresentationId,\n  deletePresentation\n} from '../../actions/presentations';\nimport { fetchAssets } from '../../actions/assets';\nimport { showDialog } from '../../actions/dialog';\nimport { dialogs } from '../Dialog/DialogRoot';\nimport PresentationCardWithActionOverlay from './PresentationCardWithActionOverlay';\nimport LoadingSpinner from '../Status/LoadingSpinner';\nimport EmptyState from '../Status/EmptyState';\n\nconst styles = theme => ({\n  cardGrid: {\n    padding: `${theme.spacing(8)}px 0`,\n    height: '100%',\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    transition: 'transform .2s',\n    '&:hover': {\n      transform: 'scale(1.1)',\n    }\n  },\n});\n\nconst SPINNER_AREA = 'presentation-list-area';\n\nclass PresentationList extends Component {\n  state = {\n    toPresentation: false,\n  };\n\n  componentDidMount() {\n    trackPromise(this.props.fetchPresentationList(), SPINNER_AREA);\n    trackPromise(this.props.fetchAssets(), SPINNER_AREA);\n  }\n\n  handleAdd = () => {\n    this.props.showDialog(dialogs.newPresentation.type, {\n      onCreate: this.onCreatePresentation\n    });\n  };\n\n  onCreatePresentation = () => {\n    const { presentations: { error } } = this.props;\n    if (isEmpty(error)) {\n      this.setState(Object.assign({}, this.state, { toPresentation: true }));\n    }\n  };\n\n  onPlay = (id) => {\n    const { presentations: { presentationsById } } = this.props;\n    this.props.showDialog(\n      dialogs.presentationPreview.type,\n      { presentation: presentationsById[id], fullScreen: true }\n    );\n  };\n\n  onEdit = (id) => {\n    this.props.setCurrentPresentationId(id);\n    this.setState(Object.assign({}, this.state, { toPresentation: true }));\n  };\n\n  onDelete = (id) => {\n    this.props.showDialog(dialogs.deletePresentationConfirmation.type, {\n      id,\n      onDeleteConfirm: this.onDeleteConfirm\n    });\n  };\n\n  onDeleteConfirm = (id) => {\n    const { presentations: { error } } = this.props;\n    if (isEmpty(error)) {\n      this.props.enqueueSnackbar('Deleted presentation');\n    }\n  };\n\n  handleEmptyState() {\n    const { presentations } = this.props;\n    if (!presentations.loading && isEmpty(presentations.presentationsById)) {\n      return (\n        <EmptyState\n          title=\"Empty Presentations\"\n          subtitle={<span>Create a presentation and it will <br />show up here.</span>}\n        />\n      );\n    }\n    return false;\n  }\n\n  handleErrors() {\n    const { presentations, assets } = this.props;\n    if (!presentations.loading && !isEmpty(presentations.error)) {\n      throw new Error(presentations.error);\n    }\n    if (!assets.loading && !isEmpty(assets.error)) {\n      throw new Error(assets.error);\n    }\n    return false;\n  }\n\n  renderPresentationList() {\n    const { presentations: { presentationsById } } = this.props;\n    return (\n      <Grid container spacing={3}>\n        {this.handleErrors() || this.handleEmptyState() || (\n          Object.values(presentationsById).map((presentation, index) => (\n            <Grid item key={presentation.id} xs={12} sm={6} md={4} lg={3}>\n              <PresentationCardWithActionOverlay\n                presentation={presentation}\n                index={index}\n                onPlay={this.onPlay}\n                onEdit={this.onEdit}\n                onDelete={this.onDelete}\n              />\n            </Grid>\n          )\n        ))}\n      </Grid>\n    );\n  }\n\n  render() {\n    const { classes, currentPresentationId } = this.props;\n\n    if (this.state.toPresentation) {\n      return <Redirect to={`/presentations/${currentPresentationId}`} />\n    }\n\n    return (\n      <React.Fragment>\n        <div className={classes.cardGrid}>\n          {this.renderPresentationList()}\n          <LoadingSpinner area={SPINNER_AREA} />\n        </div>\n        <Fab\n          color=\"primary\"\n          aria-label=\"Add\"\n          className={classes.fab}\n          onClick={this.handleAdd}\n        >\n          <AddIcon />\n        </Fab>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  presentations,\n  assets,\n  currentPresentationId\n}) => ({\n  presentations,\n  assets,\n  currentPresentationId\n});\n\nconst mapDispatchToProps = {\n  fetchPresentationList,\n  fetchAssets,\n  setCurrentPresentationId,\n  showDialog,\n  deletePresentation\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withStyles(styles),\n  withSnackbar\n)(PresentationList);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ImageIcon from '@material-ui/icons/Image';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport PdfIcon from '@material-ui/icons/PictureAsPdf';\n\nimport { filterAssetCategory } from '../../actions/assetFilters';\nimport { resourceCategories } from '../../utils/AssetUtils';\n\nconst styles = theme => ({\n  listFilter: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    paddingTop: theme.spacing(3),\n  },\n});\n\nconst AssetCategoryFilterList = props => {\n  const { assetFilters, classes } = props;\n  const assetFilterCategory = assetFilters.category;\n\n  const handleAssetCategoryFilter = (category) => {\n    props.filterAssetCategory(category);\n  };\n\n  const assetCategoryItems = [\n    {\n      label: 'Images',\n      category: resourceCategories.images,\n      icon: <ImageIcon />\n    },\n    {\n      label: 'Videos',\n      category: resourceCategories.videos,\n      icon: <VideocamIcon />\n    },\n    {\n      label: 'PDFs',\n      category: resourceCategories.pdfs,\n      icon: <PdfIcon />\n    },\n  ];\n\n  return (\n    <List className={classes.listFilter}>\n      {assetCategoryItems.map(item => (\n        <ListItem\n          button\n          key={item.label}\n          selected={assetFilterCategory === item.category}\n          onClick={() => handleAssetCategoryFilter(item.category)}\n        >\n          <ListItemIcon>{item.icon}</ListItemIcon>\n          <ListItemText primary={item.label} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nconst mapStateToProps = ({ assetFilters }) => ({\n  assetFilters\n});\n\nconst mapDispatchToProps = {\n  filterAssetCategory\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withStyles(styles)\n)(AssetCategoryFilterList);\n","import { differenceWith } from 'lodash';\n\nimport { resourceTypes, resourceCategories } from '../utils/AssetUtils';\n\n// getVisibleAssets\n// Filters through currently-selected category and excludes those assets\n// present in current presentation\nexport default (assets, { exclude, category }) => {\n  const resourceType =\n    category === resourceCategories.images\n      ? resourceTypes.image\n      : category === resourceCategories.videos\n      ? resourceTypes.video\n      : resourceTypes.pdf;\n\n  return differenceWith(\n    assets,\n    exclude,\n    ({ public_id }, id) => public_id === id\n  ).filter(asset => asset.resource_type === resourceType);\n};\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nconst styles = theme => ({\n  placeholder: {\n    display: 'none',\n  },\n});\n\nconst DraggableAssetMenu = props => {\n  const { classes, anchorEl, readOnly } = props;\n\n  const handleClose = (event) => {\n    event.stopPropagation();\n    props.clearAnchor();\n  };\n\n  const handlePreview = (event) => {\n    event.stopPropagation();\n    props.handlePreview();\n  };\n\n  const handleRemove = (event) => {\n    event.stopPropagation();\n    props.handleRemove();\n  };\n\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      open={Boolean(anchorEl)}\n      onClose={handleClose}\n    >\n      <MenuItem key=\"placeholder\" className={classes.placeholder} />\n      <MenuItem onClick={handlePreview}>\n        <ListItemIcon>\n          <VisibilityIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Preview\" />\n      </MenuItem>\n      {\n        !Boolean(readOnly) ? (\n          <MenuItem onClick={handleRemove}>\n            <ListItemIcon>\n              <DeleteIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Remove\" />\n          </MenuItem>\n        ) : null\n      }\n    </Menu>\n  );\n};\n\nDraggableAssetMenu.propTypes = {\n  anchorEl: PropTypes.object,\n  readOnly: PropTypes.bool,\n  clearAnchor: PropTypes.func.isRequired,\n  handlePreview: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(DraggableAssetMenu);\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Image, Transformation, Video } from 'cloudinary-react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Truncate from 'react-truncate';\n\nimport { showDialog } from '../../actions/dialog';\nimport { dialogs } from '../Dialog/DialogRoot';\nimport { removeAssetFromPresentation } from '../../actions/presentations';\nimport {\n  resourceTypes,\n  getResourceTypeForThumbnail,\n  getAssetTitle,\n  getAssetDescription\n} from '../../utils/AssetUtils';\nimport DraggableAssetMenu from './DraggableAssetMenu';\n\nconst styles = theme => ({\n  card: {\n    height: 120,\n  },\n});\n\nconst getItemStyle = (isDragging, draggableStyle, theme) => ({\n  userSelect: 'none',\n  marginBottom: theme.spacing(2),\n  ...draggableStyle\n});\n\nclass DraggableAsset extends Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleClickAsset = () => {\n    this.props.showDialog(dialogs.assetPreview.type, { asset: this.props.asset });\n  };\n\n  handleClickMoreOptions = (event) => {\n    event.stopPropagation();\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  clearAnchor = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleRemove = () => {\n    const { presentationId, asset, index } = this.props;\n    this.props.removeAssetFromPresentation(presentationId, asset.public_id, index);\n  };\n\n  getThumbnail = (asset) => {\n    const resourceType = this.props.asset.resource_type;\n    const urlResourceType = getResourceTypeForThumbnail(resourceType);\n\n    switch (urlResourceType) {\n      case resourceTypes.video:\n        return (\n          <Video\n            publicId={`${asset.public_id}.jpg`}\n            width=\"120\"\n            height=\"120\"\n            crop=\"fill\"\n            quality=\"auto\"\n            fetchFormat=\"auto\"\n            resourceType=\"video\">\n            <Transformation startOffset=\"0\" />\n          </Video>\n        );\n      default:\n        return (\n          <Image\n            publicId={`${asset.public_id}.jpg`}\n            width=\"120\"\n            height=\"120\"\n            crop=\"fill\"\n            quality=\"auto\"\n            fetchFormat=\"auto\">\n          </Image>\n        );\n    }\n  };\n\n  render() {\n    const { classes, theme, asset, index, readOnly } = this.props;\n    const { anchorEl } = this.state;\n\n    return (\n      <React.Fragment>\n        {asset && (\n          <Draggable\n            key={asset.public_id}\n            draggableId={asset.public_id}\n            index={index}\n          >\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                style={getItemStyle(\n                  snapshot.isDragging,\n                  provided.draggableProps.style,\n                  theme\n                )}\n              >\n                <Card className={classes.card} onClick={this.handleClickAsset}>\n                  <Grid container wrap=\"nowrap\">\n                    <Grid item>\n                      {this.getThumbnail(asset)}\n                    </Grid>\n                    <Grid item xs zeroMinWidth>\n                      <CardContent>\n                        <Typography noWrap component=\"h6\" variant=\"h6\">\n                          {getAssetTitle(asset)}\n                        </Typography>\n                        <Typography noWrap variant=\"subtitle1\" color=\"textSecondary\">\n                          <Truncate lines={2}>\n                            {getAssetDescription(asset)}\n                          </Truncate>\n                        </Typography>\n                      </CardContent>\n                    </Grid>\n                    <Grid item>\n                      <IconButton\n                        aria-owns={anchorEl ? 'simple-menu' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={this.handleClickMoreOptions}\n                      >\n                        <MoreVertIcon />\n                      </IconButton>\n                      <DraggableAssetMenu\n                        anchorEl={anchorEl}\n                        readOnly={readOnly}\n                        clearAnchor={this.clearAnchor}\n                        handlePreview={this.handleClickAsset}\n                        handleRemove={this.handleRemove}\n                      />\n                    </Grid>\n                  </Grid>\n                </Card>\n              </div>\n            )}\n          </Draggable>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nDraggableAsset.propTypes = {\n  presentationId: PropTypes.string.isRequired,\n  asset: PropTypes.object,\n  readOnly: PropTypes.bool,\n};\n\nconst mapDispatchToProps = {\n  showDialog,\n  removeAssetFromPresentation\n};\n\nexport default compose(\n  connect(null, mapDispatchToProps),\n  withStyles(styles, { withTheme: true })\n)(DraggableAsset);\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { isEmpty } from 'lodash';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Grid from '@material-ui/core/Grid';\nimport RootRef from '@material-ui/core/RootRef';\nimport Typography from '@material-ui/core/Typography';\n\nimport { excludeAssets } from '../../actions/assetFilters';\nimport getVisibleAssets from '../../selectors/assets';\nimport DraggableAsset from '../Asset/DraggableAsset';\nimport EmptyState from '../Status/EmptyState';\n\nconst styles = theme => ({\n  assets: {\n    paddingRight: theme.spacing(2),\n  },\n  assetWrapper: {\n    minWidth: 400,\n    width: 400,\n  },\n  assetSpacing: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    textAlign: 'center',\n    height: 120,\n  },\n});\n\nclass AssetLibraryDroppable extends Component {\n  componentDidMount() {\n    const {\n      presentations,\n      currentPresentationId: id,\n      excludeAssets\n    } = this.props;\n\n    if (!isEmpty(presentations) && id !== null) {\n      const presentation = presentations[id];\n      excludeAssets(presentation.selectedAssets);\n    }\n  }\n\n  render() {\n    const {\n      libraryAssets,\n      currentPresentationId,\n      classes,\n    } = this.props;\n\n    return (\n      <Droppable droppableId=\"asset-library\" isDropDisabled={true}>\n        {(provided, snapshot) => (\n          <RootRef rootRef={provided.innerRef}>\n            <Grid container direction=\"column\" className={classes.assets} wrap=\"nowrap\">\n              {libraryAssets.map((asset, index) => (\n                <Grid container item key={asset.public_id} spacing={2} wrap=\"nowrap\">\n                  <Grid item xs className={classes.assetWrapper}>\n                    <DraggableAsset\n                      key={asset.public_id}\n                      index={index}\n                      asset={asset}\n                      presentationId={currentPresentationId}\n                      readOnly={true}\n                    />\n                  </Grid>\n                  <Grid item className={classes.assetSpacing}>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                      &nbsp;\n                    </Typography>\n                  </Grid>\n                </Grid>\n              ))}\n              {isEmpty(libraryAssets) && (\n                <EmptyState\n                  title=\"Empty Category\"\n                  subtitle={<span>No assets are in this library <br />category.</span>}\n                  classes={{ avatar: classes.emptyStateAvatar }}\n                />\n              )}\n              {provided.placeholder}\n            </Grid>\n          </RootRef>\n        )}\n      </Droppable>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  presentations: { presentationsById },\n  assets: { assetsById },\n  assetFilters,\n  currentPresentationId\n}) => ({\n  presentations: presentationsById,\n  libraryAssets: getVisibleAssets(Object.values(assetsById), assetFilters),\n  currentPresentationId\n});\n\nconst mapDispatchToProps = {\n  excludeAssets\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withStyles(styles)\n)(AssetLibraryDroppable);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { isEmpty } from 'lodash';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Grid from '@material-ui/core/Grid';\nimport RootRef from '@material-ui/core/RootRef';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\n\nimport DraggableAsset from '../Asset/DraggableAsset';\nimport EmptyState from '../Status/EmptyState';\n\nconst styles = theme => ({\n  selectedAssets: {\n    backgroundColor: theme.palette.grey[200],\n  },\n  assets: {\n    paddingRight: theme.spacing(2),\n  },\n  assetsWrapper: {\n    height: '80vh',\n    flexGrow: 1,\n    minHeight: 0,\n    overflow: 'auto',\n  },\n  slideNumber: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    textAlign: 'center',\n    height: 120,\n    color: theme.palette.grey[700],\n  },\n  slideAsset: {\n    minWidth: 400,\n    width: 400,\n  },\n  emptyStateAvatar: {\n    backgroundColor: '#fff',\n  },\n});\n\nconst getListStyle = (isDraggingOver, theme) => ({\n  padding: theme.spacing(2),\n  backgroundColor: isDraggingOver ? theme.palette.grey[300] : '',\n  transition: 'background-color 0.5s ease',\n});\n\nconst SelectedAssetsDroppable = props => {\n  const {\n    presentation,\n    currentPresentationId,\n    assets,\n    classes,\n    theme\n  } = props;\n\n  const { selectedAssets } = presentation;\n  const isEmptyPresentation = isEmpty(selectedAssets);\n\n  return (\n    <Droppable droppableId=\"selected-assets\">\n      {(provided, snapshot) => (\n        <Grid\n          container\n          item\n          xs={5}\n          direction=\"column\"\n          className={classes.selectedAssets}\n          style={getListStyle(snapshot.isDraggingOver, theme)}\n        >\n          <Grid container item className={classes.assetsWrapper}>\n            <RootRef rootRef={provided.innerRef}>\n              <Grid\n                container\n                direction=\"column\"\n                className={classes.assets}\n                wrap=\"nowrap\"\n              >\n                {selectedAssets.map((assetId, index) => (\n                  <Grid container item key={assetId} spacing={2} wrap=\"nowrap\">\n                    <Grid item className={classes.slideNumber}>\n                      <Typography variant=\"h6\" color=\"inherit\">\n                        {index + 1}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs className={classes.slideAsset}>\n                      <DraggableAsset\n                        key={assetId}\n                        index={index}\n                        asset={assets[assetId]}\n                        presentationId={currentPresentationId}\n                      />\n                    </Grid>\n                  </Grid>\n                ))}\n                <Fade\n                  in={isEmptyPresentation && !snapshot.isDraggingOver}\n                  unmountOnExit\n                >\n                  <EmptyState\n                    title=\"Empty Presentation\"\n                    subtitle={<span>Drag and drop an asset from the <br/>library here.</span>}\n                    classes={{ avatar: classes.emptyStateAvatar }}\n                  />\n                </Fade>\n                {/* NOTE: No support for custom placeholder yet */}\n                {/* https://github.com/atlassian/react-beautiful-dnd/issues/518 */}\n                {provided.placeholder}\n              </Grid>\n            </RootRef>\n          </Grid>\n        </Grid>\n      )}\n    </Droppable>\n  );\n};\n\nconst mapStateToProps = ({\n  presentations: { presentationsById },\n  assets: { assetsById },\n  currentPresentationId\n}) => ({\n  presentation: presentationsById[currentPresentationId],\n  assets: assetsById,\n  currentPresentationId,\n});\n\nexport default compose(\n  connect(mapStateToProps,),\n  withStyles(styles, { withTheme: true })\n)(SelectedAssetsDroppable);\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { isEmpty } from 'lodash';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { trackPromise} from 'react-promise-tracker';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport { fetchAssets } from '../../actions/assets';\nimport { addAssetToExclude } from '../../actions/assetFilters';\nimport {\n  addAssetToPresentation,\n  reorderAssetInPresentation\n} from '../../actions/presentations';\nimport LoadingSpinner from '../Status/LoadingSpinner';\nimport AssetCategoryFilterList from './AssetCategoryFilterList';\nimport AssetLibraryDroppable from './AssetLibraryDroppable';\nimport SelectedAssetsDroppable from './SelectedAssetsDroppable';\n\nconst styles = theme => ({\n  root: {\n    width: 'auto',\n    marginLeft: theme.spacing(10),\n    marginRight: theme.spacing(4),\n    marginTop: theme.spacing(1),\n    height: '90vh',\n    flexGrow: 1,\n  },\n  rootGrid: {\n    height: '90vh',\n  },\n  assetCategoryWrapper: {\n    flexGrow: 1,\n  },\n  assetsWrapper: {\n    height: '80vh',\n    flexGrow: 1,\n    minHeight: 0,\n    overflow: 'auto',\n  },\n});\n\nconst SPINNER_AREA = 'presentation-assets-area';\n\nclass PresentationAssets extends Component {\n  componentDidMount() {\n    trackPromise(this.props.fetchAssets(), SPINNER_AREA);\n  }\n\n  onDragEnd = ({ draggableId, source, destination, type}) => {\n    const {\n      currentPresentationId,\n      addAssetToPresentation,\n      reorderAssetInPresentation,\n      addAssetToExclude\n    } = this.props;\n\n    // Dropped outside list\n    if (!destination) {\n      return;\n    }\n\n    // Move card between lists\n    if (source.droppableId !== destination.droppableId) {\n      addAssetToPresentation(\n        currentPresentationId,\n        draggableId,\n        destination.index\n      );\n      addAssetToExclude(draggableId);\n    }\n\n    // Move card within list\n    if (\n      source.index !== destination.index &&\n      source.droppableId === destination.droppableId\n    ) {\n      reorderAssetInPresentation(\n        currentPresentationId,\n        source.index,\n        destination.index\n      );\n    }\n  }\n\n  handleErrors() {\n    const { presentations, assets } = this.props;\n    if (!presentations.loading && !isEmpty(presentations.error)) {\n      throw new Error(presentations.error);\n    }\n    if (!assets.loading && !isEmpty(assets.error)) {\n      throw new Error(assets.error);\n    }\n    return false;\n  }\n\n  render() {\n    const { classes, presentations, currentPresentationId } = this.props;\n    const presentation = presentations.presentationsById[currentPresentationId];\n\n    return (\n      <div className={classes.root}>\n        <LoadingSpinner area={SPINNER_AREA} />\n        {(this.handleErrors() || presentation) && (\n          <Grid\n            container\n            direction=\"row\"\n            alignItems=\"stretch\"\n            spacing={3}\n            className={classes.rootGrid}\n          >\n            <DragDropContext onDragEnd={this.onDragEnd}>\n              <Grid\n                container\n                item\n                xs={2}\n                direction=\"column\"\n                alignItems=\"stretch\"\n              >\n                <Grid item>\n                  <Typography className={classes.title} variant=\"h6\" color=\"inherit\" gutterBottom>\n                    Asset Library\n                  </Typography>\n                </Grid>\n                <Grid item className={classes.assetCategoryWrapper}>\n                  <AssetCategoryFilterList />\n                </Grid>\n              </Grid>\n              <Grid container item xs={5} direction=\"column\">\n                <Grid item>\n                  <Typography className={classes.title} variant=\"h6\" color=\"inherit\" gutterBottom>\n                    &nbsp;\n                  </Typography>\n                </Grid>\n                <Grid container item className={classes.assetsWrapper}>\n                  <AssetLibraryDroppable />\n                </Grid>\n              </Grid>\n              <SelectedAssetsDroppable />\n            </DragDropContext>\n          </Grid>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  currentPresentationId,\n  presentations,\n  assets\n}) => ({\n  currentPresentationId,\n  presentations,\n  assets\n});\n\nconst mapDispatchToProps = {\n  fetchAssets,\n  addAssetToPresentation,\n  reorderAssetInPresentation,\n  addAssetToExclude\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withStyles(styles)\n)(PresentationAssets);\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withSnackbar } from 'notistack';\nimport { isEmpty } from 'lodash';\nimport classNames from 'classnames';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport EditIcon from '@material-ui/icons/Edit';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport {\n  fetchPresentation,\n  setCurrentPresentationId,\n  createPresentation\n} from '../../actions/presentations';\nimport { showDialog } from '../../actions/dialog';\nimport { dialogs } from '../Dialog/DialogRoot';\nimport PresentationAssets from './PresentationAssets';\nimport ErrorBoundary from '../Status/ErrorBoundary';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  backButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  editIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  input: {\n    margin: theme.spacing(1),\n  },\n  rightIcon: {\n    marginRight: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  errorBanner: {\n    paddingTop: 0,\n    paddingLeft: theme.spacing(10),\n    paddingRight: theme.spacing(4),\n  },\n});\n\nclass Presentation extends Component {\n  state = {\n    toHome: false,\n  };\n\n  componentDidMount() {\n    const { routeId: id } = this.props;\n    this.props.setCurrentPresentationId(id);\n    this.props.fetchPresentation(id);\n  }\n\n  handleBack = () => {\n    this.props.setCurrentPresentationId(null);\n    this.setState({ toHome: true });\n  };\n\n  handleEditTitle = (presentation) => {\n    this.props.showDialog(dialogs.editPresentationTitle.type, {\n      presentation,\n      onSave: this.handleEditTitleSave\n    });\n  };\n\n  handleEditTitleSave = () => {\n    this.props.enqueueSnackbar('Changed presentation title');\n  };\n\n  handlePreview = (presentation) => {\n    this.props.showDialog(dialogs.presentationPreview.type, { presentation });\n  };\n\n  render() {\n    const { classes, presentations, routeId } = this.props;\n\n    if (this.state.toHome === true) {\n      return <Redirect to=\"/\" />\n    }\n\n    const presentation = presentations.presentationsById[routeId];\n    const errorExists = !presentations.loading && !isEmpty(presentations.error);\n\n    return (\n      <div className={classes.root}>\n        <React.Fragment>\n          <AppBar position=\"static\" color=\"default\">\n            <Toolbar>\n              <IconButton\n                className={classes.backButton}\n                color=\"inherit\"\n                aria-label=\"Back to list\"\n                onClick={this.handleBack}\n              >\n                <KeyboardArrowLeft />\n              </IconButton>\n              <Typography\n                className={classes.title}\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n              >\n                {presentation && presentation.title}\n              </Typography>\n              {!errorExists && (\n                <React.Fragment>\n                  <IconButton\n                    aria-label=\"Edit title\"\n                    className={classes.editIcon}\n                    onClick={() => this.handleEditTitle(presentation)}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                  <div className={classes.grow} />\n                  <Button\n                    color=\"inherit\"\n                    onClick={() => this.handlePreview(presentation)}\n                    disabled={presentation && isEmpty(presentation.selectedAssets)}\n                  >\n                    <VisibilityIcon\n                      className={classNames(classes.rightIcon, classes.iconSmall)}\n                    />\n                    Preview\n                  </Button>\n                </React.Fragment>\n              )}\n            </Toolbar>\n          </AppBar>\n          <ErrorBoundary classes={{ errorBanner: classes.errorBanner }}>\n            <PresentationAssets />\n          </ErrorBoundary>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (\n  { presentations },\n  ownProps\n) => ({\n  presentations,\n  routeId: ownProps.match.params.id\n});\n\nconst mapDispatchToProps = {\n  fetchPresentation,\n  setCurrentPresentationId,\n  createPresentation,\n  showDialog,\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter,\n  withStyles(styles),\n  withSnackbar\n)(Presentation);\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { trackPromise} from 'react-promise-tracker';\nimport { isEmpty } from 'lodash';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport ImageIcon from '@material-ui/icons/Image';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport PdfIcon from '@material-ui/icons/PictureAsPdf';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Truncate from 'react-truncate';\n\nimport { fetchAssets } from '../../actions/assets';\nimport { excludeAssets, filterAssetCategory } from '../../actions/assetFilters';\nimport getVisibleAssets from '../../selectors/assets';\nimport {\n  resourceCategories,\n  getAssetTitle,\n  getAssetDescription\n} from '../../utils/AssetUtils';\nimport LoadingSpinner from '../Status/LoadingSpinner';\nimport ResponsiveThumbnail from '../Thumbnail/ResponsiveThumbnail';\nimport EmptyState from '../Status/EmptyState';\n\nconst styles = theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(8),\n    height: '100%',\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n  },\n  cardMedia: {\n    position: 'relative',\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n});\n\nconst SPINNER_AREA = 'asset-library-area';\n\nclass AssetLibrary extends Component {\n  state = {\n    value: resourceCategories.images,\n  };\n\n  componentDidMount() {\n    trackPromise(this.props.fetchAssets(), SPINNER_AREA);\n    this.props.excludeAssets([]);\n    this.props.filterAssetCategory(resourceCategories.images);\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n    this.props.filterAssetCategory(value);\n  };\n\n  renderTabs = () => (\n    <Tabs\n      value={this.state.value}\n      onChange={this.handleChange}\n      indicatorColor=\"primary\"\n      textColor=\"primary\"\n      centered\n    >\n      <Tab\n        icon={<ImageIcon />}\n        label=\"Images\"\n        value={resourceCategories.images}\n      />\n      <Tab\n        icon={<VideocamIcon />}\n        label=\"Videos\"\n        value={resourceCategories.videos}\n      />\n      <Tab\n        icon={<PdfIcon />}\n        label=\"PDFs\"\n        value={resourceCategories.pdfs}\n      />\n    </Tabs>\n  );\n\n  handleErrors() {\n    const { assets } = this.props;\n    if (!assets.loading && !isEmpty(assets.error)) {\n      throw new Error(assets.error);\n    }\n    return false;\n  }\n\n  renderAssetList() {\n    const { classes, libraryAssets } = this.props;\n\n    return libraryAssets.map((asset, index) => {\n      const title = getAssetTitle(asset);\n      const description = getAssetDescription(asset);\n\n      return (\n        <Grid item key={asset.public_id} xs={12} sm={6} md={4} lg={3}>\n          <Card className={classes.card}>\n            <Grid container wrap=\"nowrap\" direction=\"column\">\n              <Grid item className={classes.cardMedia}>\n                <ResponsiveThumbnail asset={asset} />\n              </Grid>\n              <Grid item xs zeroMinWidth>\n                <CardContent className={classes.cardContent}>\n                  <Typography noWrap component=\"h6\" variant=\"h6\">\n                    {title}\n                  </Typography>\n                  <Typography noWrap variant=\"subtitle1\" color=\"textSecondary\">\n                    <Truncate lines={1}>\n                      {description}\n                    </Truncate>\n                  </Typography>\n                </CardContent>\n              </Grid>\n            </Grid>\n          </Card>\n        </Grid>\n      );\n    });\n  }\n\n  renderEmptyState() {\n    const { classes, assets, libraryAssets } = this.props;\n    if (!assets.loading && isEmpty(libraryAssets)) {\n      return (\n        <EmptyState\n          title=\"Empty Category\"\n          subtitle={<span>No assets are in this library <br />category.</span>}\n          classes={{ avatar: classes.emptyStateAvatar }}\n        />\n      );\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.cardGrid}>\n        {this.handleErrors() || (\n          <React.Fragment>\n            <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n              <Grid item>\n                {this.renderTabs()}\n              </Grid>\n              <Grid container item spacing={3}>\n                {this.renderAssetList()}\n              </Grid>\n            </Grid>\n            {this.renderEmptyState()}\n          </React.Fragment>\n        )}\n        <LoadingSpinner area={SPINNER_AREA} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ assets, assetFilters }) => ({\n  assets,\n  libraryAssets: getVisibleAssets(Object.values(assets.assetsById), assetFilters),\n  assetFilters\n});\n\nconst mapDispatchToProps = {\n  fetchAssets,\n  excludeAssets,\n  filterAssetCategory\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withStyles(styles)\n)(AssetLibrary);\n","const PRIMARY_COLOUR = '#3A5B78';\nconst BLUE_GRADIENT = 'linear-gradient(to right, #243949 0%, #517fa4 100%)';\n\nexport default {\n  palette: {\n    primary: {\n      main: PRIMARY_COLOUR,\n    },\n    secondary: {\n      main: PRIMARY_COLOUR\n    },\n    background: {\n      default: '#fff',\n    }\n  },\n  typography: {\n    useNextVariants: true,\n  },\n  overrides: {\n    MuiDrawer: {\n      paper: {\n        background: BLUE_GRADIENT,\n        '& *': {\n          color: '#fff',\n        },\n      },\n    },\n    MuiAppBar: {\n      colorDefault: {\n        boxShadow: 'none',\n        backgroundColor: '#fff',\n      },\n    },\n    MuiFab: {\n      primary: {\n        background: BLUE_GRADIENT,\n      },\n    },\n    MuiList: {\n      root: {\n        background: BLUE_GRADIENT,\n      },\n    },\n    MuiListItem: {\n      root: {\n        borderLeft: `2px solid ${PRIMARY_COLOUR}`,\n        '&$selected&$button': {\n          backgroundColor: '#fff',\n          transition: 'background-color 0.5s ease',\n          '& *': {\n            color: '#000',\n          },\n        },\n        '&$button:hover, &$button:focus': {\n          backgroundColor: 'rgba(255,255,255,0.9)',\n          transition: 'background-color 0.5s ease',\n          '& *': {\n            color: '#000',\n          },\n        },\n      },\n    },\n    MuiListItemIcon: {\n      root: {\n        color: '#fff'\n      }\n    },\n    MuiListItemText: {\n      primary: {\n        color: '#fff'\n      }\n    }\n  }\n};\n","import React from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { CloudinaryContext } from 'cloudinary-react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { SnackbarProvider } from 'notistack';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport HomeLayout from './Layout/HomeLayout';\nimport DialogRoot from './Dialog/DialogRoot';\nimport PresentationList from './PresentationList/PresentationList';\nimport Presentation from './Presentation/Presentation';\nimport AssetLibrary from './AssetLibrary/AssetLibrary';\nimport CustomMuiTheme from '../config/muiTheme';\n\nconst theme = createMuiTheme(CustomMuiTheme);\n\nconst RouteWithLayout = ({layout, component, ...rest}) => (\n  <Route {...rest} render={(props) =>\n    React.createElement(layout, props, React.createElement(component, props))\n  }/>\n);\n\nconst App = ({ cloudName, uploadPreset }) => (\n  <SnackbarProvider maxSnack={3}>\n    <CloudinaryContext cloudName={cloudName} uploadPreset={uploadPreset}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <HashRouter>\n          <Switch>\n            <RouteWithLayout\n              exact\n              path=\"/\"\n              layout={HomeLayout}\n              component={PresentationList}\n            />\n            <RouteWithLayout\n              path=\"/assets\"\n              layout={HomeLayout}\n              component={AssetLibrary}\n            />\n            <Route path=\"/presentations/:id\" component={Presentation} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </HashRouter>\n        <DialogRoot />\n      </MuiThemeProvider>\n    </CloudinaryContext>\n  </SnackbarProvider>\n);\n\nApp.propTypes = {\n  cloudName: PropTypes.string,\n  uploadPreset: PropTypes.string,\n};\n\nApp.contextTypes = {\n  cloudName: PropTypes.string,\n  uploadPreset: PropTypes.string,\n};\n\nexport default App;\n","import { handleActions } from 'redux-actions';\n\nimport {\n  fetchAssetsBegin,\n  fetchAssetsSuccess,\n  fetchAssetsFailure\n} from '../actions/assets';\n\nconst initialState = {\n  error: null,\n  loading: false,\n  assetsById: {}\n};\n\nexport default handleActions(\n  new Map([\n    [\n      fetchAssetsBegin, (state, action) => ({\n        ...state,\n        loading: true\n      })\n    ],\n    [\n      fetchAssetsSuccess, (state, action) => ({\n        ...state,\n        loading: false,\n        assetsById: action.payload.reduce((assets, asset) => {\n          assets[asset.public_id] = asset;\n          return assets;\n        }, {})\n      })\n    ],\n    [\n      fetchAssetsFailure, (state, action) => ({\n        ...state,\n        loading: false,\n        error: action.payload,\n      })\n    ]\n  ]),\n  initialState\n);\n","import { combineActions, handleActions } from 'redux-actions';\n\nimport {\n  addAsset,\n  reorderAsset,\n  removeAsset,\n  fetchPresentationListBegin,\n  fetchPresentationListSuccess,\n  fetchPresentationListFailure,\n  fetchPresentationBegin,\n  fetchPresentationSuccess,\n  fetchPresentationFailure,\n  createPresentationBegin,\n  createPresentationSuccess,\n  createPresentationFailure,\n  savePresentationBegin,\n  savePresentationSuccess,\n  savePresentationFailure,\n  deletePresentationBegin,\n  deletePresentationSuccess,\n  deletePresentationFailure\n} from '../actions/presentations';\n\nconst initialState = {\n  error: null,\n  loading: false,\n  presentationsById: {}\n};\n\nexport default handleActions(\n  new Map([\n    [\n      addAsset, (state, action) => {\n        const {\n          presentationId,\n          assetId,\n          newAssetIndex\n        } = action.payload;\n\n        const selectedAssets = Array.from(\n          state.presentationsById[presentationId].selectedAssets\n        );\n        selectedAssets.splice(newAssetIndex, 0, assetId);\n\n        return {\n          ...state,\n          presentationsById: {\n            ...state.presentationsById,\n            [presentationId]: {\n              ...state.presentationsById[presentationId],\n              selectedAssets\n            }\n          }\n        };\n      }\n    ],\n    [\n      reorderAsset, (state, action) => {\n        const {\n          presentationId,\n          oldAssetIndex,\n          newAssetIndex\n        } = action.payload;\n\n        const newAssets = Array.from(\n          state.presentationsById[presentationId].selectedAssets\n        );\n        const [removedAsset] = newAssets.splice(oldAssetIndex, 1);\n        newAssets.splice(newAssetIndex, 0, removedAsset);\n\n        return {\n          ...state,\n          presentationsById: {\n            ...state.presentationsById,\n            [presentationId]: {\n              ...state.presentationsById[presentationId],\n              selectedAssets: newAssets\n            }\n          }\n        };\n      }\n    ],\n    [\n      removeAsset, (state, action) => {\n        const {\n          presentationId,\n          assetIndex\n        } = action.payload;\n\n        const selectedAssets = Array.from(\n          state.presentationsById[presentationId].selectedAssets\n        );\n        selectedAssets.splice(assetIndex, 1);\n\n        return {\n          ...state,\n          presentationsById: {\n            ...state.presentationsById,\n            [presentationId]: {\n              ...state.presentationsById[presentationId],\n              selectedAssets\n            }\n          }\n        };\n      }\n    ],\n    [\n      [combineActions(\n        fetchPresentationListBegin,\n        fetchPresentationBegin,\n        createPresentationBegin,\n        savePresentationBegin,\n        deletePresentationBegin\n      )], (state, action) => ({\n        ...state,\n        loading: true\n      })\n    ],\n    [\n      fetchPresentationListSuccess, (state, action) => {\n        const presentationsById = action.payload.reduce(\n          (presentationList, presentation) => {\n            presentationList[presentation.id] = presentation;\n            return presentationList;\n          }, {}\n        );\n        return {\n          ...state,\n          loading: false,\n          presentationsById\n        };\n      }\n    ],\n    [\n      fetchPresentationSuccess, (state, action) => {\n        const newPresentation = {};\n        newPresentation[action.payload.id] = action.payload;\n        const newState = {\n          ...state,\n          loading: false,\n          presentationsById: {...state.presentationsById, ...newPresentation }\n        };\n        return newState;\n      }\n    ],\n    [\n      [combineActions(\n        createPresentationSuccess,\n        savePresentationSuccess\n      )], (state, action) => {\n        const presentation = action.payload;\n\n        return {\n          ...state,\n          loading: false,\n          presentationsById: {\n            ...state.presentationsById,\n            [presentation.id]: {\n              ...presentation\n            }\n          }\n        };\n      }\n    ],\n    [\n      deletePresentationSuccess, (state, action) => {\n        const id = action.payload;\n        const {\n          [id]: deletedPresentation,\n          ...restOfPresentations\n        } = state.presentationsById;\n\n        return {\n          ...state,\n          loading: false,\n          presentationsById: {\n            ...restOfPresentations\n          }\n        };\n      }\n    ],\n    [\n      [combineActions(\n        fetchPresentationListFailure,\n        fetchPresentationFailure,\n        createPresentationFailure,\n        savePresentationFailure,\n        deletePresentationFailure\n      )], (state, action) => ({\n        ...state,\n        loading: false,\n        error: action.payload\n      })\n    ]\n  ]),\n  initialState\n);\n","import { handleActions } from 'redux-actions';\nimport { without } from 'lodash';\n\nimport {\n  excludeAssets,\n  addAssetToExclude,\n  removeAssetFromExclude,\n  filterAssetCategory\n} from '../actions/assetFilters';\nimport { resourceCategories } from '../utils/AssetUtils';\n\nconst initialState = {\n  // list of asset IDs to exclude from library that are in current presentation\n  exclude: [],\n  category: resourceCategories.images,\n};\n\nexport default handleActions(\n  new Map([\n    [\n      excludeAssets, (state, action) => ({\n        ...state,\n        exclude: action.payload\n      })\n    ],\n    [\n      addAssetToExclude, (state, action) => ({\n        ...state,\n        exclude: [...state.exclude, action.payload]\n      })\n    ],\n    [\n      removeAssetFromExclude, (state, action) => ({\n        ...state,\n        exclude: without(state.exclude, action.payload)\n      })\n    ],\n    [\n      filterAssetCategory, (state, action) => ({\n        ...state,\n        category: action.payload\n      })\n    ]\n  ]),\n  initialState\n);\n","import { handleAction } from 'redux-actions';\n\nimport { setCurrentPresentationId } from '../actions/presentations';\n\nexport default handleAction(\n  setCurrentPresentationId,\n  (state, action) => action.payload,\n  null\n);\n","import { handleActions } from 'redux-actions';\n\nimport { showDialog, hideDialog } from '../actions/dialog';\n\nconst initialState = {\n  dialogType: null,\n  dialogProps: {},\n};\n\nexport default handleActions(\n  new Map([\n    [\n      showDialog, (state, action) => ({\n        dialogType: action.payload.dialogType,\n        dialogProps: action.payload.dialogProps,\n      })\n    ],\n    [\n      hideDialog, (state, action) => initialState\n    ]\n  ]),\n  initialState\n);\n","import { combineReducers } from 'redux';\n\nimport assets from './assets';\nimport presentations from './presentations';\nimport assetFilters from './assetFilters';\nimport currentPresentationId from './currentPresentationId';\nimport dialog from './dialog';\n\nexport default combineReducers({\n  presentations,\n  currentPresentationId,\n  assets,\n  assetFilters,\n  dialog,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport Config from './config/config';\nimport App from './components/App';\nimport rootReducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App\n      cloudName={Config.cloudName}\n      uploadPreset={Config.uploadPreset}\n    />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}